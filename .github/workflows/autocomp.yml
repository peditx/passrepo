name: Build and Release luci-theme-peditx for Multiple Architectures

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: 
          - x86_64
          - aarch64_generic
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_cortex-a15_neon-vfpv4
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_74kc
          - mipsel_mips32

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variable
        run: echo "packages=example-package" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git gettext unzip zlib1g-dev file python3 python3-distutils curl

      - name: Setup OpenWrt SDK for ${{ matrix.architecture }}
        run: |
          ARCH=${{ matrix.architecture }}
          SDK_URL=""
          
          # Set SDK URL based on architecture
          case $ARCH in
            x86_64)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/x86/64/openwrt-sdk-23.05.0-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            aarch64_generic)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/rockchip/armv8/openwrt-sdk-23.05.0-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            aarch64_cortex-a53)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa53/openwrt-sdk-23.05.0-mvebu-cortexa53_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            aarch64_cortex-a72)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa72/openwrt-sdk-23.05.0-mvebu-cortexa72_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a7)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/mt7629/openwrt-sdk-23.05.0-mediatek-mt7629_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a7_neon-vfpv4)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/sunxi/cortexa7/openwrt-sdk-23.05.0-sunxi-cortexa7_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a8_vfpv3)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/sunxi/cortexa8/openwrt-sdk-23.05.0-sunxi-cortexa8_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a9)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/bcm53xx/generic/openwrt-sdk-23.05.0-bcm53xx-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a9_neon)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/zynq/generic/openwrt-sdk-23.05.0-zynq-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a9_vfpv3-d16)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa9/openwrt-sdk-23.05.0-mvebu-cortexa9_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            arm_cortex-a15_neon-vfpv4)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/ipq806x/generic/openwrt-sdk-23.05.0-ipq806x-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz"
              ;;
            mips_24kc)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/ath79/generic/openwrt-sdk-23.05.0-ath79-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            mips_4kec)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/realtek/rtl838x/openwrt-sdk-23.05.0-realtek-rtl838x_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            mips_mips32)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/bcm63xx/generic/openwrt-sdk-23.05.0-bcm63xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            mipsel_24kc)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/ramips/rt288x/openwrt-sdk-23.05.0-ramips-rt288x_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            mipsel_74kc)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/ramips/rt3883/openwrt-sdk-23.05.0-ramips-rt3883_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            mipsel_mips32)
              SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/bcm47xx/generic/openwrt-sdk-23.05.0-bcm47xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
              ;;
            *)
              echo "Unsupported architecture $ARCH"
              exit 1
              ;;
          esac

          # Download SDK and extract
          wget $SDK_URL
          SDK_FILE=$(basename $SDK_URL)
          mkdir -p sdk
          tar -xJf $SDK_FILE -C sdk --strip-components=1
          cd sdk
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-23.05" > feeds.conf
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-23.05" >> feeds.conf
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-23.05" >> feeds.conf
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-23.05"  >> feeds.conf
          echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> feeds.conf

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Add Passwall package
        run: |
          cd sdk/package
          git clone https://github.com/xiaorouji/openwrt-passwall-packages
          cd ..
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_SIGNED_PACKAGES=n" >> .config
          ./scripts/feeds install -a -f -p passwall_packages


      - name: Build packages
        run: |
          cd sdk
          PACKAGES=(
            brook
            chinadns-ng
            dns2socks
            dns2tcp
            gn
            hysteria
            ipt2socks
            microsocks
            naiveproxy
            pdnsd-alt
            shadowsocks-rust
            shadowsocksr-libev
            simple-obfs
            sing-box
            ssocks
            tcping
            trojan-go
            trojan-plus
            trojan
            tuic-client
            v2ray-core
            v2ray-geodata
            v2ray-plugin
            xray-core
            xray-plugin
          )

          for PACKAGE in "${PACKAGES[@]}"; do
            make package/$PACKAGE/compile -j8 V=sc
          done

      - name: Save Passwall package for ${{ matrix.architecture }}
        run: |
          cd sdk
          mkdir -p artifacts/${{ matrix.architecture }}
          find bin/ -name "*.ipk" -exec cp {} artifacts/${{ matrix.architecture }}/ \;

      - name: Create Release for ${{ matrix.architecture }}
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.5-${{ matrix.architecture }}
          name: passwall release - ${{ matrix.architecture }} - ${{env.timestamp}}
          body: 'Release for architecture: ${{ matrix.architecture }}'

      - name: Upload Passwall package to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/${{ matrix.architecture }}/*.ipk
          upload_url: ${{ steps.create_release.outputs.upload_url }}
