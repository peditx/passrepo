name: Build and Deploy OpenWrt Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-packages:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository A
      - name: Checkout Repository A
        uses: actions/checkout@v3

      # Step 2: Define Architectures
      - name: Define Architectures
        run: |
          echo "x86_64 arm_cortex-a9 mipsel_24kc mips_24kc aarch64_generic powerpc_8540" > architectures.txt

      # Step 3: Pull OpenWrt SDK Docker Image
      - name: Pull OpenWrt SDK Docker Image
        run: |
          docker pull openwrt/sdk:x86_64
      - name: Fix Permissions
        run: |
          chmod -R 777 $GITHUB_WORKSPACE
          
      # Step 4: Build Packages for All Architectures
      - name: Build Packages
        run: |
          docker run --rm \
            -v $GITHUB_WORKSPACE:/workspace \
            openwrt/sdk:x86_64 bash -c "
              set -e
              TMP_OUTPUT_DIR=\$(mktemp -d)
              mkdir -p \$TMP_OUTPUT_DIR
              cp -r /workspace/* /sdk/package/custom
              ./scripts/feeds update -a
              ./scripts/feeds install -a
              for arch in \$(cat /workspace/architectures.txt); do
                echo 'Building for architecture: \$arch'
                make defconfig
                make package/compile V=s ARCH=\$arch
                mkdir -p \$TMP_OUTPUT_DIR/\$arch
                cp bin/packages/\$arch/*.ipk \$TMP_OUTPUT_DIR/\$arch/
              done
              cp -r \$TMP_OUTPUT_DIR/* /workspace/output/
            "

      # Step 5: Push Compiled Packages to Repository B
      - name: Push to Repository B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://github.com/peditx/passrepo.git passrepo
          cd passrepo
          rm -rf *
          cp -r ../output/* .
          git add .
          git commit -m "Update compiled packages"
          git push origin main
